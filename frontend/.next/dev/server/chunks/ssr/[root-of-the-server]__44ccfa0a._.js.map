{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/leand/projects/carne-facil/frontend/pages/butcher.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport default function ButcherPanel() {\r\n  const [tickets, setTickets] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [updating, setUpdating] = useState(null);\r\n\r\n  // Buscar todos os tickets\r\n  const fetchTickets = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/tickets');\r\n      const data = await response.json();\r\n      \r\n      if (response.ok) {\r\n        // O backend retorna { success: true, tickets: [...] }\r\n        setTickets(data.tickets || []);\r\n        setError(null);\r\n      } else {\r\n        setError(data.error || 'Erro ao carregar tickets');\r\n        setTickets([]);\r\n      }\r\n    } catch (err) {\r\n      setError('Erro de conexão: ' + err.message);\r\n      setTickets([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Atualizar status do ticket\r\n  const updateTicketStatus = async (ticketId, newStatus) => {\r\n    console.log('=== ATUALIZANDO STATUS ===');\r\n    console.log('ID:', ticketId);\r\n    console.log('Novo status:', newStatus);\r\n    \r\n    setUpdating(ticketId);\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:4000/ticket/${ticketId}/status`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ status: newStatus }),\r\n      });\r\n\r\n      console.log('Response status:', response.status);\r\n      const data = await response.json();\r\n      console.log('Response data:', data);\r\n      \r\n      if (response.ok) {\r\n        // Atualizar o ticket na lista local\r\n        setTickets(prevTickets => \r\n          prevTickets.map(ticket => \r\n            ticket.id === ticketId \r\n              ? { ...ticket, status: newStatus }\r\n              : ticket\r\n          )\r\n        );\r\n        setError(null);\r\n        console.log('✅ Status atualizado com sucesso!');\r\n      } else {\r\n        console.error('❌ Erro na resposta:', data);\r\n        setError(data.error || 'Erro ao atualizar status');\r\n      }\r\n    } catch (err) {\r\n      console.error('❌ Erro de conexão:', err);\r\n      setError('Erro de conexão: ' + err.message);\r\n    } finally {\r\n      setUpdating(null);\r\n    }\r\n  };\r\n\r\n  // Carregar tickets ao montar o componente\r\n  useEffect(() => {\r\n    fetchTickets();\r\n    \r\n    // Configurar SSE para atualizações em tempo real\r\n    const eventSource = new EventSource('http://localhost:4000/events');\r\n    \r\n    eventSource.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      if (data.type === 'ticket_updated' || data.type === 'connected' || data.type === 'tickets_reset') {\r\n        fetchTickets(); // Recarregar todos os tickets quando houver atualização\r\n      }\r\n    };\r\n    \r\n    eventSource.onerror = (error) => {\r\n      console.error('SSE Error:', error);\r\n    };\r\n    \r\n    // Atualizar a cada 30 segundos como fallback\r\n    const interval = setInterval(fetchTickets, 30000);\r\n    \r\n    return () => {\r\n      clearInterval(interval);\r\n      eventSource.close();\r\n    };\r\n  }, []);\r\n\r\n  // Função para obter a cor do status\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'waiting': return 'bg-yellow-100 text-yellow-800';\r\n      case 'preparing': return 'bg-blue-100 text-blue-800';\r\n      case 'completed': return 'bg-green-100 text-green-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  // Função para obter o texto do status\r\n  const getStatusText = (status) => {\r\n    switch (status) {\r\n      case 'waiting': return 'Aguardando';\r\n      case 'preparing': return 'Preparando';\r\n      case 'completed': return 'Pronto';\r\n      default: return status;\r\n    }\r\n  };\r\n\r\n  // Função para obter as próximas ações possíveis\r\n  const getNextActions = (currentStatus) => {\r\n    switch (currentStatus) {\r\n      case 'waiting': return [{ status: 'preparing', label: 'Iniciar Preparo' }];\r\n      case 'preparing': return [{ status: 'completed', label: 'Marcar como Pronto' }];\r\n      case 'completed': return [];\r\n      default: return [];\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Carregando tickets...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-8\">\r\n      <div className=\"max-w-6xl mx-auto px-4\">\r\n        <div className=\"flex justify-between items-center mb-8\">\r\n          <h1 className=\"text-4xl font-bold text-gray-800\">\r\n            🥩 Painel do Açougueiro\r\n          </h1>\r\n          <button\r\n            onClick={fetchTickets}\r\n            className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg transition-colors\"\r\n          >\r\n            🔄 Atualizar\r\n          </button>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6\">\r\n            <strong>Erro:</strong> {error}\r\n          </div>\r\n        )}\r\n\r\n        {/* Filtrar apenas tickets pendentes (não completed) */}\r\n        {tickets.filter(ticket => ticket.status !== 'completed').length === 0 ? (\r\n          <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\r\n            <p className=\"text-gray-500 text-lg\">Nenhum ticket pendente</p>\r\n            <p className=\"text-gray-400 text-sm mt-2\">\r\n              Todos os pedidos foram finalizados ou não há pedidos no momento\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\r\n            {tickets\r\n              .filter(ticket => ticket.status !== 'completed') // Filtrar tickets finalizados\r\n              .map((ticket) => (\r\n              <div key={ticket.id} className=\"bg-white rounded-lg shadow-md p-6\">\r\n                <div className=\"flex justify-between items-start mb-4\">\r\n                  <div>\r\n                    <h3 className=\"text-2xl font-bold text-gray-800\">\r\n                      Senha #{ticket.number}\r\n                    </h3>\r\n                    <p className=\"text-gray-600\">{ticket.customer_name || ticket.order?.customer_name || 'Cliente'}</p>\r\n                  </div>\r\n                  <span className={`px-3 py-1 rounded-full text-sm font-medium ${getStatusColor(ticket.status)}`}>\r\n                    {getStatusText(ticket.status)}\r\n                  </span>\r\n                </div>\r\n\r\n                <div className=\"space-y-2 mb-4\">\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    <strong>Cliente:</strong> {ticket.customer_name || ticket.order?.customer_name || 'N/A'}\r\n                  </p>\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    <strong>Loja:</strong> {ticket.store?.name || 'N/A'}\r\n                  </p>\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    <strong>Criado:</strong> {new Date(ticket.created_at).toLocaleString('pt-BR')}\r\n                  </p>\r\n                </div>\r\n\r\n                {/* Lista de Produtos */}\r\n                {ticket.items && ticket.items.length > 0 && (\r\n                  <div className=\"mb-4 p-3 bg-gray-50 rounded-lg\">\r\n                    <h4 className=\"font-semibold text-gray-700 mb-2\">Produtos:</h4>\r\n                    <div className=\"space-y-1\">\r\n                      {ticket.items.map((item, index) => (\r\n                        <div key={index} className=\"text-sm\">\r\n                          <span>{item.quantity}x {item.product_name}</span>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"space-y-2\">\r\n                  {getNextActions(ticket.status).map((action) => (\r\n                    <button\r\n                      key={action.status}\r\n                      onClick={() => {\r\n                        console.log('=== DEBUG CLICK ===');\r\n                        console.log('Ticket ID:', ticket.id);\r\n                        console.log('Status atual:', ticket.status);\r\n                        console.log('Novo status:', action.status);\r\n                        console.log('URL:', `http://localhost:4000/ticket/${ticket.id}/status`);\r\n                        updateTicketStatus(ticket.id, action.status);\r\n                      }}\r\n                      disabled={updating === ticket.id}\r\n                      className={`w-full font-bold py-2 px-4 rounded-lg transition-colors ${\r\n                        action.status === 'completed' \r\n                          ? 'bg-orange-600 hover:bg-orange-700 disabled:bg-gray-400 text-white'\r\n                          : 'bg-green-600 hover:bg-green-700 disabled:bg-gray-400 text-white'\r\n                      }`}\r\n                    >\r\n                      {updating === ticket.id ? (\r\n                        <span className=\"flex items-center justify-center\">\r\n                          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                          Atualizando...\r\n                        </span>\r\n                      ) : (\r\n                        action.label\r\n                      )}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Estatísticas - apenas tickets pendentes */}\r\n        <div className=\"mt-8 grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div className=\"bg-yellow-100 rounded-lg p-4 text-center\">\r\n            <h3 className=\"text-lg font-semibold text-yellow-800\">Aguardando</h3>\r\n            <p className=\"text-2xl font-bold text-yellow-900\">\r\n              {tickets.filter(t => t.status === 'waiting').length}\r\n            </p>\r\n          </div>\r\n          <div className=\"bg-blue-100 rounded-lg p-4 text-center\">\r\n            <h3 className=\"text-lg font-semibold text-blue-800\">Preparando</h3>\r\n            <p className=\"text-2xl font-bold text-blue-900\">\r\n              {tickets.filter(t => t.status === 'preparing').length}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAAA;;;AAEe,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,+GAAQ,EAAC,EAAE;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,+GAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,+GAAQ,EAAC;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,+GAAQ,EAAC;IAEzC,0BAA0B;IAC1B,MAAM,eAAe;QACnB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,SAAS,EAAE,EAAE;gBACf,sDAAsD;gBACtD,WAAW,KAAK,OAAO,IAAI,EAAE;gBAC7B,SAAS;YACX,OAAO;gBACL,SAAS,KAAK,KAAK,IAAI;gBACvB,WAAW,EAAE;YACf;QACF,EAAE,OAAO,KAAK;YACZ,SAAS,sBAAsB,IAAI,OAAO;YAC1C,WAAW,EAAE;QACf,SAAU;YACR,WAAW;QACb;IACF;IAEA,6BAA6B;IAC7B,MAAM,qBAAqB,OAAO,UAAU;QAC1C,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC,OAAO;QACnB,QAAQ,GAAG,CAAC,gBAAgB;QAE5B,YAAY;QAEZ,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,6BAA6B,EAAE,SAAS,OAAO,CAAC,EAAE;gBAC9E,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE,QAAQ;gBAAU;YAC3C;YAEA,QAAQ,GAAG,CAAC,oBAAoB,SAAS,MAAM;YAC/C,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ,GAAG,CAAC,kBAAkB;YAE9B,IAAI,SAAS,EAAE,EAAE;gBACf,oCAAoC;gBACpC,WAAW,CAAA,cACT,YAAY,GAAG,CAAC,CAAA,SACd,OAAO,EAAE,KAAK,WACV;4BAAE,GAAG,MAAM;4BAAE,QAAQ;wBAAU,IAC/B;gBAGR,SAAS;gBACT,QAAQ,GAAG,CAAC;YACd,OAAO;gBACL,QAAQ,KAAK,CAAC,uBAAuB;gBACrC,SAAS,KAAK,KAAK,IAAI;YACzB;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,sBAAsB;YACpC,SAAS,sBAAsB,IAAI,OAAO;QAC5C,SAAU;YACR,YAAY;QACd;IACF;IAEA,0CAA0C;IAC1C,IAAA,gHAAS,EAAC;QACR;QAEA,iDAAiD;QACjD,MAAM,cAAc,IAAI,YAAY;QAEpC,YAAY,SAAS,GAAG,CAAC;YACvB,MAAM,OAAO,KAAK,KAAK,CAAC,MAAM,IAAI;YAClC,IAAI,KAAK,IAAI,KAAK,oBAAoB,KAAK,IAAI,KAAK,eAAe,KAAK,IAAI,KAAK,iBAAiB;gBAChG,gBAAgB,wDAAwD;YAC1E;QACF;QAEA,YAAY,OAAO,GAAG,CAAC;YACrB,QAAQ,KAAK,CAAC,cAAc;QAC9B;QAEA,6CAA6C;QAC7C,MAAM,WAAW,YAAY,cAAc;QAE3C,OAAO;YACL,cAAc;YACd,YAAY,KAAK;QACnB;IACF,GAAG,EAAE;IAEL,oCAAoC;IACpC,MAAM,iBAAiB,CAAC;QACtB,OAAQ;YACN,KAAK;gBAAW,OAAO;YACvB,KAAK;gBAAa,OAAO;YACzB,KAAK;gBAAa,OAAO;YACzB;gBAAS,OAAO;QAClB;IACF;IAEA,sCAAsC;IACtC,MAAM,gBAAgB,CAAC;QACrB,OAAQ;YACN,KAAK;gBAAW,OAAO;YACvB,KAAK;gBAAa,OAAO;YACzB,KAAK;gBAAa,OAAO;YACzB;gBAAS,OAAO;QAClB;IACF;IAEA,gDAAgD;IAChD,MAAM,iBAAiB,CAAC;QACtB,OAAQ;YACN,KAAK;gBAAW,OAAO;oBAAC;wBAAE,QAAQ;wBAAa,OAAO;oBAAkB;iBAAE;YAC1E,KAAK;gBAAa,OAAO;oBAAC;wBAAE,QAAQ;wBAAa,OAAO;oBAAqB;iBAAE;YAC/E,KAAK;gBAAa,OAAO,EAAE;YAC3B;gBAAS,OAAO,EAAE;QACpB;IACF;IAEA,IAAI,SAAS;QACX,qBACE,qKAAC;YAAI,WAAU;sBACb,cAAA,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBAAI,WAAU;;;;;;kCACf,qKAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;;;;;;IAIrC;IAEA,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAI,WAAU;;8BACb,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;4BAAG,WAAU;sCAAmC;;;;;;sCAGjD,qKAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;gBAKF,uBACC,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;sCAAO;;;;;;wBAAc;wBAAE;;;;;;;gBAK3B,QAAQ,MAAM,CAAC,CAAA,SAAU,OAAO,MAAM,KAAK,aAAa,MAAM,KAAK,kBAClE,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;4BAAE,WAAU;sCAAwB;;;;;;sCACrC,qKAAC;4BAAE,WAAU;sCAA6B;;;;;;;;;;;yCAK5C,qKAAC;oBAAI,WAAU;8BACZ,QACE,MAAM,CAAC,CAAA,SAAU,OAAO,MAAM,KAAK,aAAa,8BAA8B;qBAC9E,GAAG,CAAC,CAAC,uBACN,qKAAC;4BAAoB,WAAU;;8CAC7B,qKAAC;oCAAI,WAAU;;sDACb,qKAAC;;8DACC,qKAAC;oDAAG,WAAU;;wDAAmC;wDACvC,OAAO,MAAM;;;;;;;8DAEvB,qKAAC;oDAAE,WAAU;8DAAiB,OAAO,aAAa,IAAI,OAAO,KAAK,EAAE,iBAAiB;;;;;;;;;;;;sDAEvF,qKAAC;4CAAK,WAAW,CAAC,2CAA2C,EAAE,eAAe,OAAO,MAAM,GAAG;sDAC3F,cAAc,OAAO,MAAM;;;;;;;;;;;;8CAIhC,qKAAC;oCAAI,WAAU;;sDACb,qKAAC;4CAAE,WAAU;;8DACX,qKAAC;8DAAO;;;;;;gDAAiB;gDAAE,OAAO,aAAa,IAAI,OAAO,KAAK,EAAE,iBAAiB;;;;;;;sDAEpF,qKAAC;4CAAE,WAAU;;8DACX,qKAAC;8DAAO;;;;;;gDAAc;gDAAE,OAAO,KAAK,EAAE,QAAQ;;;;;;;sDAEhD,qKAAC;4CAAE,WAAU;;8DACX,qKAAC;8DAAO;;;;;;gDAAgB;gDAAE,IAAI,KAAK,OAAO,UAAU,EAAE,cAAc,CAAC;;;;;;;;;;;;;gCAKxE,OAAO,KAAK,IAAI,OAAO,KAAK,CAAC,MAAM,GAAG,mBACrC,qKAAC;oCAAI,WAAU;;sDACb,qKAAC;4CAAG,WAAU;sDAAmC;;;;;;sDACjD,qKAAC;4CAAI,WAAU;sDACZ,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,sBACvB,qKAAC;oDAAgB,WAAU;8DACzB,cAAA,qKAAC;;4DAAM,KAAK,QAAQ;4DAAC;4DAAG,KAAK,YAAY;;;;;;;mDADjC;;;;;;;;;;;;;;;;8CAQlB,qKAAC;oCAAI,WAAU;8CACZ,eAAe,OAAO,MAAM,EAAE,GAAG,CAAC,CAAC,uBAClC,qKAAC;4CAEC,SAAS;gDACP,QAAQ,GAAG,CAAC;gDACZ,QAAQ,GAAG,CAAC,cAAc,OAAO,EAAE;gDACnC,QAAQ,GAAG,CAAC,iBAAiB,OAAO,MAAM;gDAC1C,QAAQ,GAAG,CAAC,gBAAgB,OAAO,MAAM;gDACzC,QAAQ,GAAG,CAAC,QAAQ,CAAC,6BAA6B,EAAE,OAAO,EAAE,CAAC,OAAO,CAAC;gDACtE,mBAAmB,OAAO,EAAE,EAAE,OAAO,MAAM;4CAC7C;4CACA,UAAU,aAAa,OAAO,EAAE;4CAChC,WAAW,CAAC,wDAAwD,EAClE,OAAO,MAAM,KAAK,cACd,sEACA,mEACJ;sDAED,aAAa,OAAO,EAAE,iBACrB,qKAAC;gDAAK,WAAU;;kEACd,qKAAC;wDAAI,WAAU;;;;;;oDAAuE;;;;;;uDAIxF,OAAO,KAAK;2CAtBT,OAAO,MAAM;;;;;;;;;;;2BA1ChB,OAAO,EAAE;;;;;;;;;;8BA2EzB,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;4BAAI,WAAU;;8CACb,qKAAC;oCAAG,WAAU;8CAAwC;;;;;;8CACtD,qKAAC;oCAAE,WAAU;8CACV,QAAQ,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,WAAW,MAAM;;;;;;;;;;;;sCAGvD,qKAAC;4BAAI,WAAU;;8CACb,qKAAC;oCAAG,WAAU;8CAAsC;;;;;;8CACpD,qKAAC;oCAAE,WAAU;8CACV,QAAQ,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,aAAa,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOnE","debugId":null}}]
}