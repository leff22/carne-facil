{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/leand/projects/carne-facil/frontend/pages/ticket/%5Bid%5D.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\n\r\nexport default function TicketPage() {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const [ticket, setTicket] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [connected, setConnected] = useState(false);\r\n\r\n  // Buscar dados do ticket (apenas uma vez)\r\n  const fetchTicket = async () => {\r\n    if (!id) return;\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:4000/ticket/${id}`);\r\n      const data = await response.json();\r\n      \r\n      if (response.ok) {\r\n        setTicket(data);\r\n        setError(null);\r\n      } else {\r\n        setError(data.error || 'Ticket não encontrado');\r\n      }\r\n    } catch (err) {\r\n      setError('Erro de conexão: ' + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Conectar ao SSE para atualizações em tempo real\r\n  useEffect(() => {\r\n    if (!id) return;\r\n\r\n    // Buscar dados iniciais\r\n    fetchTicket();\r\n\r\n    // Conectar ao SSE\r\n    const eventSource = new EventSource(`http://localhost:4000/events/${id}`);\r\n    \r\n    eventSource.onopen = () => {\r\n      setConnected(true);\r\n      console.log('Conectado ao servidor de notificações');\r\n    };\r\n\r\n    eventSource.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      \r\n      if (data.type === 'status_update') {\r\n        setTicket(prevTicket => ({\r\n          ...prevTicket,\r\n          status: data.status,\r\n          updated_at: data.updated_at\r\n        }));\r\n        \r\n        // Mostrar notificação visual\r\n        if (data.status === 'completed') {\r\n          // Pode adicionar notificação do browser aqui\r\n          if (Notification.permission === 'granted') {\r\n            new Notification('Pedido Pronto!', {\r\n              body: `Sua senha #${data.number} está pronta para retirada`,\r\n              icon: '/favicon.ico'\r\n            });\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    eventSource.onerror = () => {\r\n      setConnected(false);\r\n      console.log('Erro na conexão SSE');\r\n    };\r\n\r\n    // Cleanup\r\n    return () => {\r\n      eventSource.close();\r\n    };\r\n  }, [id]);\r\n\r\n  // Solicitar permissão para notificações\r\n  useEffect(() => {\r\n    if (Notification.permission === 'default') {\r\n      Notification.requestPermission();\r\n    }\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-blue-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Carregando sua senha...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-red-50 flex items-center justify-center\">\r\n        <div className=\"text-center p-6\">\r\n          <div className=\"text-red-600 text-6xl mb-4\">❌</div>\r\n          <h1 className=\"text-2xl font-bold text-red-800 mb-2\">Erro</h1>\r\n          <p className=\"text-red-600\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'waiting': return 'bg-yellow-500';\r\n      case 'preparing': return 'bg-blue-500';\r\n      case 'completed': return 'bg-green-500';\r\n      default: return 'bg-yellow-500';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status) => {\r\n    switch (status) {\r\n      case 'waiting': return 'Aguardando';\r\n      case 'preparing': return 'Preparando';\r\n      case 'completed': return 'Pronto!';\r\n      default: return 'Aguardando';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100\">\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">\r\n            🥩 {ticket.store?.name || 'Açougue'}\r\n          </h1>\r\n          <p className=\"text-gray-600\">Acompanhe seu pedido em tempo real</p>\r\n        </div>\r\n\r\n        {/* Senha Principal */}\r\n        <div className=\"bg-white rounded-2xl shadow-xl p-8 mb-6 text-center\">\r\n          <div className=\"mb-4\">\r\n            <span className=\"text-gray-500 text-lg\">Sua senha</span>\r\n          </div>\r\n          <div className=\"text-8xl font-bold text-blue-600 mb-4\">\r\n            #{ticket.number}\r\n          </div>\r\n          <div className={`inline-flex items-center px-6 py-3 rounded-full text-white font-semibold ${getStatusColor(ticket.status)}`}>\r\n            <div className=\"w-3 h-3 bg-white rounded-full mr-2 animate-pulse\"></div>\r\n            {getStatusText(ticket.status)}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Informações do Pedido */}\r\n        <div className=\"bg-white rounded-xl shadow-lg p-6 mb-6\">\r\n          <h3 className=\"text-xl font-semibold mb-4 text-gray-800\">Detalhes do Pedido</h3>\r\n          <div className=\"space-y-2\">\r\n            <div className=\"flex justify-between\">\r\n              <span className=\"text-gray-600\">Cliente:</span>\r\n              <span className=\"font-medium\">{ticket.order?.customer_name}</span>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <span className=\"text-gray-600\">Pedido:</span>\r\n              <span className=\"font-medium\">#{ticket.order?.id}</span>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <span className=\"text-gray-600\">Horário:</span>\r\n              <span className=\"font-medium\">\r\n                {new Date(ticket.created_at).toLocaleTimeString('pt-BR')}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Status Steps */}\r\n        <div className=\"bg-white rounded-xl shadow-lg p-6 mb-6\">\r\n          <h3 className=\"text-xl font-semibold mb-4 text-gray-800\">Progresso do Pedido</h3>\r\n          <div className=\"flex items-center justify-between\">\r\n            {['waiting', 'preparing', 'completed'].map((step, index) => (\r\n              <div key={step} className=\"flex flex-col items-center flex-1\">\r\n                <div className={`w-10 h-10 rounded-full flex items-center justify-center text-white font-bold text-lg ${\r\n                  ticket.status === step ? getStatusColor(step) : \r\n                  (step === 'preparing' && ticket.status === 'completed') || \r\n                  (step === 'waiting' && ['preparing', 'completed'].includes(ticket.status)) ? \r\n                  'bg-green-500' : 'bg-gray-300'\r\n                }`}>\r\n                  {ticket.status === step ? (\r\n                    <div className=\"w-3 h-3 bg-white rounded-full animate-pulse\"></div>\r\n                  ) : (\r\n                    (step === 'preparing' && ticket.status === 'completed') || \r\n                    (step === 'waiting' && ['preparing', 'completed'].includes(ticket.status)) ? '✓' : index + 1\r\n                  )}\r\n                </div>\r\n                <span className=\"text-sm mt-2 text-center font-medium\">\r\n                  {getStatusText(step)}\r\n                </span>\r\n                {index < 2 && (\r\n                  <div className={`h-1 w-full mt-4 ${\r\n                    (step === 'waiting' && ['preparing', 'completed'].includes(ticket.status)) ||\r\n                    (step === 'preparing' && ticket.status === 'completed') ? 'bg-green-500' : 'bg-gray-300'\r\n                  }`}></div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          {/* Mensagem especial quando pronto */}\r\n          {ticket.status === 'completed' && (\r\n            <div className=\"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n              <div className=\"text-center\">\r\n                <div className=\"text-4xl mb-2\">🎉</div>\r\n                <h4 className=\"text-lg font-bold text-green-800 mb-1\">Seu pedido está pronto!</h4>\r\n                <p className=\"text-green-700\">Dirija-se ao balcão para retirar</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Mensagem quando preparando */}\r\n          {ticket.status === 'preparing' && (\r\n            <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\r\n              <div className=\"text-center\">\r\n                <div className=\"text-2xl mb-2\">👨‍🍳</div>\r\n                <h4 className=\"text-lg font-bold text-blue-800 mb-1\">Preparando seu pedido...</h4>\r\n                <p className=\"text-blue-700\">Continue suas compras, avisaremos quando estiver pronto!</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Auto-refresh indicator */}\r\n        <div className=\"text-center mt-6\">\r\n          <div className=\"flex items-center justify-center space-x-2\">\r\n            <div className={`w-2 h-2 rounded-full ${connected ? 'bg-green-500' : 'bg-red-500'}`}></div>\r\n            <p className=\"text-sm text-gray-500\">\r\n              {connected ? '🔗 Conectado - Recebendo atualizações em tempo real' : '❌ Desconectado'}\r\n            </p>\r\n          </div>\r\n          <p className=\"text-xs text-gray-400 mt-1\">\r\n            Mantenha esta página aberta enquanto faz suas compras\r\n          </p>\r\n        </div>\r\n\r\n        {/* Botão para voltar */}\r\n        <div className=\"text-center mt-4\">\r\n          <button\r\n            onClick={() => router.push('/')}\r\n            className=\"bg-gray-600 hover:bg-gray-700 text-white font-medium py-2 px-4 rounded-lg transition-colors\"\r\n          >\r\n            ← Voltar ao início\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}